name: Operator Push

on:
  workflow_call:
    inputs:
      GO_VERSION:
        description: Go version to use
        default: "~1.23"
        required: false
        type: string

      ENABLE_LINTING:
        description: Run golangci-lint
        default: true
        required: false
        type: boolean

      RELEASE_BRANCH:
        description: Release branch to push changes
        required: false
        type: string
        default: main

      ENABLE_UNIT_TESTS:
        description: Run golang tests
        default: true
        required: false
        type: boolean

      OPM_VERSION:
        description: OPM CLI version to use
        default: "v1.50.0"
        required: false
        type: string

    secrets:
      SLACK_WEBHOOK_URL:
        description: "Secret to send success/failure message to slack"
        required: true

      CONTAINER_REGISTRY_URL:
        description: "Registry URL to publish image"
        required: true

      CONTAINER_REGISTRY_USERNAME:
        description: "Registry username to login"
        required: true

      CONTAINER_REGISTRY_PASSWORD:
        description: "Registry password to login"
        required: true
jobs:
  make-operator-pull-request:
    name: Operator Pull Request
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify code
        id: verify
        uses: ./.github/actions/verify
        with:
          GO_VERSION: ${{ inputs.GO_VERSION }}
          ENABLE_LINTING: ${{ inputs.ENABLE_LINTING }}
          ENABLE_UNIT_TESTS: ${{ inputs.ENABLE_UNIT_TESTS }}

      - name: Setup Version Tag
        id: tag
        uses: ./.github/actions/tag
        with:
          RELEASE_BRANCH: ${{ inputs.RELEASE_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker
        id: docker
        uses: ./.github/actions/docker
        with:
          TAG: ${{ steps.tag.outputs.TAG }}
        env:
          CONTAINER_REGISTRY_URL: ${{ secrets.CONTAINER_REGISTRY_URL }}
          CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build & Push
        uses: ./.github/actions/build
        with:
          TAG: ${{ steps.tag.outputs.TAG }}
          IMAGE_REPOSITORY: ${{ steps.docker.outputs.IMAGE_REPOSITORY }}
          OPM_VERSION: ${{ inputs.OPM_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify
        uses: ./.github/actions/notify
        with:
          TAG: ${{ steps.tag.outputs.TAG }}
          IMAGE_REPOSITORY: ${{ steps.docker.outputs.IMAGE_REPOSITORY }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}